name: Tests

on:
  pull_request:
    branches: [main]
  # Allow workflow to be called by another workflow
  workflow_call:
    # Must define secrets here so that the calling workflow can pass in the NPM_TOKEN needed to install private packages.
    secrets:
      NPM_TOKEN:
        description: 'The NPM_TOKEN passed from the caller workflow as it is not available within workflow_call.'
        required: true
      VITE_AUTH_URL:
        description: 'The base URL of the KAuth backend, e.g. https://konnect.konghq.tech'
        required: true
  # Allow workflow to be called manually
  workflow_dispatch:
    inputs:
      VITE_AUTH_URL:
        description: 'The base URL of the KAuth backend, e.g. https://konnect.konghq.tech'
        type: string
        default: https://konnect.konghq.tech
        required: false

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create .npmrc
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Typecheck
        run: yarn typecheck

      - name: Semantic Release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v2
        env:
          # Since branch protections are on (pushing commits) you need to use a bot PAT
          GITHUB_TOKEN: ${{ secrets.KONGPONENTS_BOT_PAT }}
        with:
          # Only run as dry-run here so we can output the version if released
          dry_run: true


      - name: Add release comment
        if: ${{ steps.semantic-release.outputs.new_release_version }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: release
          message: |
            :rocket: If merged, this PR will release version `${{ steps.semantic-release.outputs.new_release_version }}`

            _(If there are no other releases beforehand)_

      - name: Run Cypress component tests
        uses: cypress-io/github-action@v4
        with:
          install: false
          command: yarn test
        env:
          VITE_AUTH_URL: ${{ secrets.VITE_AUTH_URL || inputs.VITE_AUTH_URL }}

      - name: Upload Cypress screenshots (on failure)
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress_screenshots
          path: cypress/screenshots/

      - name: Upload Cypress videos (always)
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress_videos
          path: cypress/videos/
